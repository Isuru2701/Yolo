from transformers import pipeline

# Load pre-trained model for topic extraction
topic_extraction_pipeline = pipeline("zero-shot-classification")

#prompt
def keyword_engine(prompt):
    if prompt is not None:
        # Predefined labels or genres
        labels = ['betrayal',
                  'competition',
                  'bank heist',
                  'neorealism',
                  'no background score',
                  'satire',
                  'robot',
                  'based on comic',
                  'sword and sandal',
                  'biker',
                  'one man army',
                  'blockbuster',
                  'neo noir',
                  'time travel',
                  'remake',
                  'cyberpunk',
                  'multiple perspectives',
                  'vampire',
                  'fantasy sequence',
                  'zombie',
                  'shootout',
                  'conspiracy',
                  'steampunk',
                  'rescue',
                  'wuxia',
                  'robbery',
                  'corruption',
                  'idealism',
                  'director cameo',
                  'anime',
                  'dialogue driven',
                  'epic',
                  'superhero',
                  'cult film',
                  'southern gothic',
                  'futuristic',
                  'ambiguous ending',
                  'slasher',
                  'cult',
                  'medieval times',
                  'organized crime',
                  'ensemble cast',
                  'famous line',
                  'rotoscoping',
                  'post-apocalypse',
                  'plot twist',
                  'chick flick',
                  'tech-noir',
                  'battle',
                  'parenthood',
                  'action hero',
                  'caper',
                  'double cross',
                  'experimental film',
                  'parody',
                  'coming of age',
                  'dream sequence',
                  'high school',
                  'based on comic book',
                  'kidnapping',
                  'redemption',
                  'experimental',
                  'no music',
                  'spirituality',
                  'heist',
                  'alternate history',
                  'flashback',
                  'supernatural',
                  'criminal mastermind',
                  'swashbuckler',
                  "character's point of view camera shot",
                  'farce',
                  'Americana',
                  'dark hero',
                  'investigation',
                  'road movie',
                  'police corruption',
                  'surprise ending',
                  'Shakespeare',
                  'famous score',
                  'nonlinear timeline',
                  'whistleblower',
                  'police detective',
                  'musical number',
                  'dialogue driven storyline',
                  'based on book',
                  'based on novel',
                  'famous opening theme',
                  'femme fatale',
                  'hero',
                  'virtual reality',
                  'deus ex machina',
                  'knight',
                  'dystopia',
                  'psychopath',
                  'monster',
                  'one against many',
                  'postmodern',
                  'espionage',
                  'voice over narration',
                  'on the run',
                  'serial killer',
                  'ninja',
                  'fictional biography',
                  'directed by star',
                  'business',
                  'race against time',
                  'fairy tale',
                  'self sacrifice',
                  'kung fu',
                  'based on play',
                  'anti-hero',
                  'multiple storyline']

        # Extract topics from prompts and map them to labels
        # Extract topics using zero-shot classification
        topic_results = topic_extraction_pipeline(prompt, labels)

        # Get top predicted label
        predicted_label = topic_results['labels'][0:3]
        return predicted_label
